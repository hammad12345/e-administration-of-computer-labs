<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:p="http://primefaces.org/ui"
      >
    <h:head>
        <title>Facelet Title</title>

        <script type="text/javascript">
    /**
     * Declare constant
     */

    var E_TODO="1";
    var E_INPRO="2";
    var E_VERIFY="3";
    var E_DONE="4";
    var E_OLD_STATUS="oldStatus";
    var E_CONTENT="content";
    var E_NEW_STATUS="newStatus";

    /**
     * JavaScript handle for drop
     */
    function jsDropToDoToInPro(event, ui) {
            ui.draggable.fadeOut("fast");
            alert(event.type+" : "+ui.draggable.text());
            var content=ui.draggable.text();
            handleDrop([{name: E_OLD_STATUS, value: E_TODO},
                                   {name: E_CONTENT, value: content},
                                   {name: E_NEW_STATUS, value: E_INPRO}]);

    }
    function jsDropInProToVerify(event, ui) {
            ui.draggable.fadeOut("fast");
            alert(event.type+" : "+ui.draggable.text());
            var content=ui.draggable.text();
            handleDrop([{name: E_OLD_STATUS, value: E_INPRO},
                                   {name: E_CONTENT, value: content},
                                   {name: E_NEW_STATUS, value: E_VERIFY}]);

    }
     function jsDropVerifyToDone(event, ui) {
            ui.draggable.fadeOut("fast");
            alert(event.type+" : "+ui.draggable.text());
            var content=ui.draggable.text();
            handleDrop([{name: E_OLD_STATUS, value: E_VERIFY},
                                   {name: E_CONTENT, value: content},
                                   {name: E_NEW_STATUS, value: E_DONE}]);

    }

    function jsDropVerifyToToDo(event, ui) {
            ui.draggable.fadeOut("fast");
            alert(event.type+" : "+ui.draggable.text());
            var content=ui.draggable.text();
            handleDrop([{name: E_OLD_STATUS, value: E_VERIFY},
                                   {name: E_CONTENT, value: content},
                                   {name: E_NEW_STATUS, value: E_TODO}]);

    }

        </script>

    </h:head>
    <h:body>

        <h:panelGrid columns="4">
            <p:panel header="TODO">
                <p:dataGrid id="todo" value="#{complaintController.lstToDo}" var="complaintToDo" columns="1">
                    <p:column>
                        <h:outputText id="complaint" value="#{complaintToDo.complaintID}_#{complaintToDo.description}" ></h:outputText>
                        <p:draggable for="complaint" revert="true" scope="1"/>
                    </p:column>
                </p:dataGrid>
            </p:panel>
            <p:panel header="IN PROGRESS">
                <p:dataGrid id="inPro" value="#{complaintController.lstInProgress}" var="complaintInPro" columns="1">
                    <p:column>
                        <h:outputText id="complaint" value="#{complaintInPro.complaintID}_#{complaintInPro.description}"  ></h:outputText>
                        <p:draggable for="complaint" revert="true" scope="2"/>
                    </p:column>

                </p:dataGrid>

            </p:panel>

            <p:panel header="VERIFY">
                <p:dataGrid id="verify" value="#{complaintController.lstVerify}" var="complaintVerify" columns="1">
                    <p:column>
                        <h:outputText id="complaint" value="#{complaintVerify.complaintID}_#{complaintVerify.description}"  ></h:outputText>
                        <p:draggable for="complaint" revert="true" scope="3"/>
                    </p:column>
                </p:dataGrid>
            </p:panel>

            <p:panel header="DONE">
                <p:dataGrid id="done" value="#{complaintController.lstDone}" var="complaintDone" columns="1">
                    <p:column>
                        <h:outputText id="complaint" value="#{complaintDone.complaintID}_#{complaintDone.description}"  ></h:outputText>
                        <p:draggable for="complaint" revert="true" scope="4"/>
                    </p:column>
                </p:dataGrid>
            </p:panel>

            <p:droppable activeStyleClass="ui-state-highlight" tolerance="fit" onDrop="jsDropToDoToInPro" scope="1" for="inPro">
               
            </p:droppable>
            <p:droppable activeStyleClass="ui-state-highlight" tolerance="fit" onDrop="jsDropInProToVerify" scope="2" for="verify">
                
            </p:droppable>
            <p:droppable activeStyleClass="ui-state-highlight" tolerance="fit" onDrop="jsDropVerifyToDone" scope="3" for="done">
                
            </p:droppable>
            <p:droppable activeStyleClass="ui-state-highlight" tolerance="fit" onDrop="jsDropVerifyToToDo" scope="4" for="todo">
               
            </p:droppable>


        </h:panelGrid>
        <h:form>
            <p:growl id="growl" autoUpdate="true" showDetail="true" sticky="true"/>
            <p:remoteCommand name="handleDrop" update="growl " actionListener="#{complaintController.handleDrop}"></p:remoteCommand>
        </h:form>
    </h:body>
</html>

